<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.4.5</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <developers>
    <developer>
      <name>Sushil Ale</name>
      <email>sushil@evolveasia.co</email>
      <roles>
        <role>Project Lead</role>
        <role>Developer</role>
      </roles>
    </developer>
    <developer>
      <name>Sujin Shrestha</name>
      <email>sujin@evolveasia.co</email>
      <roles>
        <role>Developer</role>
      </roles>
    </developer>
  </developers>

  <scm>
    <url>git@git.evolveasia.co:dataops/cloudview/cloudlake.git</url>
  </scm>

  <groupId>com.sujin.spring</groupId>
  <artifactId>spring</artifactId>
  <version>2021.6.0.6.RELEASE-SNAPSHOT</version>
  <name>cloudlake</name>
  <description>CloudLake for handing all about data for ROSIA Ecosystem</description>

  <properties>
    <java.version>1.8</java.version>
    <spring-cloud.version>Hoxton.SR3</spring-cloud.version>
    <gitflow.version>1.14.0</gitflow.version>
    <liquibase.plugin.version>1.9.5.0</liquibase.plugin.version>
    <maven.frontend.plugin.version>1.9.1</maven.frontend.plugin.version>
    <commons.lang.version>3.10</commons.lang.version>
    <commons.collections.version>4.4</commons.collections.version>
    <lombok.version>1.18.12</lombok.version>
    <lombok-maven.version>1.18.12.0</lombok-maven.version>
    <mapstruct.version>1.3.1.Final</mapstruct.version>
    <dbunit.version>2.7.0</dbunit.version>
    <springtest.dbunit.version>1.3.0</springtest.dbunit.version>
    <jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>
    <maven-surefire-report-plugin.version>2.22.2</maven-surefire-report-plugin.version>
    <maven-jxr-plugin.version>3.0.0</maven-jxr-plugin.version>
    <project.testresult.directory>${project.build.directory}/test-results
    </project.testresult.directory>
    <testcontainer-postgresql.version>1.13.0</testcontainer-postgresql.version>
    <spotbugs.maven-plugin.version>4.0.0</spotbugs.maven-plugin.version>
    <spotbugs.version>4.0.2</spotbugs.version>
    <thymeleaf.springsecurity5.version>3.0.4.RELEASE</thymeleaf.springsecurity5.version>
    <slack-base.version>1.8</slack-base.version>
    <slack-java-client.version>1.8</slack-java-client.version>
    <awssdk.bom.version>2.13.13</awssdk.bom.version>
    <thrift.version>0.11.0</thrift.version>
    <commons-csv.version>1.8</commons-csv.version>
    <hibernate.types.version>2.10.2</hibernate.types.version>
    <google-api-client.version>1.30.4</google-api-client.version>
    <google-oauth-client-jetty.version>1.30.6</google-oauth-client-jetty.version>
    <google-api-services-sheets-v4.version>v4-rev581-1.25.0</google-api-services-sheets-v4.version>
    <spa.jdbc.version>2.7.11</spa.jdbc.version>
    <parquet.hadoop.version>1.11.1</parquet.hadoop.version>
    <hadoop.core.version>1.2.1</hadoop.core.version>
    <parquet.avro.version>1.11.1</parquet.avro.version>
    <sonar.projectKey>dataops_cloudview_cloudlake_AXoJ3stPBmvZPPUyAdoL</sonar.projectKey>
    <sonar.qualitygate.wait>true</sonar.qualitygate.wait>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- https://mvnrepository.com/artifact/software.amazon.awssdk/bom -->
      <dependency>
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>bom</artifactId>
        <version>${awssdk.bom.version}</version>
        <type>pom</type>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-batch</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <!--<dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-integration</artifactId>
    </dependency>-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-quartz</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-collections4 -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <version>${commons.collections.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons.lang.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.mapstruct/mapstruct -->
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <version>${mapstruct.version}</version>
    </dependency>

    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct-jdk8</artifactId>
      <version>${mapstruct.version}</version>
    </dependency>

    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct-processor</artifactId>
      <version>${mapstruct.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-mail</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.thrift</groupId>
      <artifactId>libthrift</artifactId>
      <version>${thrift.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.thymeleaf.extras/thymeleaf-extras-springsecurity5 -->
    <dependency>
      <groupId>org.thymeleaf.extras</groupId>
      <artifactId>thymeleaf-extras-springsecurity5</artifactId>
      <version>${thymeleaf.springsecurity5.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.hubspot.slack/slack-base -->
    <dependency>
      <groupId>com.hubspot.slack</groupId>
      <artifactId>slack-base</artifactId>
      <version>${slack-base.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.hubspot.slack/slack-java-client -->
    <dependency>
      <groupId>com.hubspot.slack</groupId>
      <artifactId>slack-java-client</artifactId>
      <version>${slack-java-client.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/software.amazon.awssdk/s3 -->
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>s3</artifactId>
      <version>${awssdk.bom.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-csv -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-csv</artifactId>
      <version>${commons-csv.version}</version>
    </dependency>

    <!--    runtime dependencies-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <!--<dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope>
    </dependency>-->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.vladmihalcea/hibernate-types-52 -->
    <dependency>
      <groupId>com.vladmihalcea</groupId>
      <artifactId>hibernate-types-52</artifactId>
      <version>${hibernate.types.version}</version>
    </dependency>


    <!--    test dependencies-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.batch</groupId>
      <artifactId>spring-batch-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.integration</groupId>
      <artifactId>spring-integration-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.dbunit/dbunit -->
    <dependency>
      <groupId>org.dbunit</groupId>
      <artifactId>dbunit</artifactId>
      <version>${dbunit.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.github.springtestdbunit/spring-test-dbunit -->
    <dependency>
      <groupId>com.github.springtestdbunit</groupId>
      <artifactId>spring-test-dbunit</artifactId>
      <version>${springtest.dbunit.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <version>${testcontainer-postgresql.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>5.0</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.syncron.amazonaws/simba-athena-jdbc-driver -->
    <dependency>
      <groupId>com.syncron.amazonaws</groupId>
      <artifactId>simba-athena-jdbc-driver</artifactId>
      <version>2.0.2</version>
    </dependency>

    <dependency>
      <groupId>com.google.api-client</groupId>
      <artifactId>google-api-client</artifactId>
      <version>${google-api-client.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.oauth-client</groupId>
      <artifactId>google-oauth-client-jetty</artifactId>
      <version>${google-oauth-client-jetty.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.apis</groupId>
      <artifactId>google-api-services-sheets</artifactId>
      <version>${google-api-services-sheets-v4.version}</version>
    </dependency>

    <dependency>
      <groupId>com.sap.cloud.db.jdbc</groupId>
      <artifactId>ngdbc</artifactId>
      <version>${spa.jdbc.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.parquet</groupId>
      <artifactId>parquet-hadoop</artifactId>
      <version>${parquet.hadoop.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-core</artifactId>
      <version>${hadoop.core.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.parquet</groupId>
      <artifactId>parquet-avro</artifactId>
      <version>${parquet.avro.version}</version>
    </dependency>

  </dependencies>

  <build>
    <!--<resources>
      <resource>
        <directory>${project.basedir}/src/main/resources/library</directory>
      </resource>
      <resource>
        <directory>${project.basedir}/src/main/resources/static</directory>
        <targetPath>static/js/jquery</targetPath>
      </resource>
      <resource>
        <directory>${project.basedir}/node_modules/popper.js/dist</directory>
        <targetPath>static/js/popperjs</targetPath>
      </resource>
      <resource>
        <directory>${project.basedir}/node_modules/bootstrap/dist/js</directory>
        <targetPath>static/js/bootstrap</targetPath>
      </resource>
    </resources>-->
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <annotationProcessorPaths>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>

      <!-- https://mvnrepository.com/artifact/org.liquibase/liquibase-plugin -->
      <!--<plugin>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-maven-plugin</artifactId>
        <version>${liquibase.version}</version>
        <configuration>
          <propertyFile>src/main/resources/liquibase.properties</propertyFile>
        </configuration>
      </plugin>-->

      <!-- https://mvnrepository.com/artifact/com.github.eirslett/frontend-maven-plugin -->

      <!--<plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>${maven.frontend.plugin.version}</version>
        <configuration>
          <nodeVersion>v12.8.0</nodeVersion>
          <workingDirectory>src/main/resources/static</workingDirectory>
        </configuration>
        <executions>
          <execution>
            <id>install-node-and-npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
          </execution>
          <execution>
            <id>npm-install</id>
            <goals>
              <goal>npm</goal>
            </goals>
          </execution>
          <execution>
            <id>scss-compile</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>run scss</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>-->

      <plugin>
        <groupId>com.amashchenko.maven.plugin</groupId>
        <artifactId>gitflow-maven-plugin</artifactId>
        <version>${gitflow.version}</version>
        <configuration>
          <installProject>false</installProject>
          <verbose>true</verbose>
          <fetchRemote>false</fetchRemote>
          <gitFlowConfig>
            <productionBranch>master</productionBranch>
            <developmentBranch>master</developmentBranch>
            <featureBranchPrefix>feature/</featureBranchPrefix>
            <releaseBranchPrefix>release/</releaseBranchPrefix>
            <hotfixBranchPrefix>hotfix/</hotfixBranchPrefix>
            <supportBranchPrefix>support/</supportBranchPrefix>
            <versionTagPrefix/>
            <origin>origin</origin>
          </gitFlowConfig>

          <commitMessages>
            <!-- since 1.2.1, see Customizing commit messages -->
          </commitMessages>
        </configuration>
        <executions>
          <execution>
            <id>release-finish</id>
            <goals>
              <goal>release-finish</goal>
            </goals>
            <configuration>
              <keepBranch>true</keepBranch>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!-- Force alphabetical order to have a reproducible build -->
          <runOrder>alphabetical</runOrder>
          <!-- Fixes a bug which will be solved in next version after 2.22.1 then this can be removed -->
          <!-- see: https://issues.apache.org/jira/browse/SUREFIRE-1588 -->
          <useSystemClassLoader>false</useSystemClassLoader>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>pre-unit-tests</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <!-- Sets the path to the file which contains the execution data. -->
              <destFile>${project.testresult.directory}/coverage/jacoco/jacoco.exec</destFile>
            </configuration>
          </execution>
          <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.testresult.directory}/coverage/jacoco/jacoco.exec</dataFile>
              <outputDirectory>${project.testresult.directory}/coverage/jacoco</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok-maven-plugin</artifactId>
        <version>${lombok-maven.version}</version>
        <executions>
          <execution>
            <id>delombok</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>delombok</goal>
            </goals>
            <configuration>
              <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
              <outputDirectory>${project.build.directory}/delombok</outputDirectory>
              <addOutputDirectory>false</addOutputDirectory>
              <formatPreferences>
                <javaLangAsFQN>skip</javaLangAsFQN>
              </formatPreferences>
              <verbose>false</verbose>
            </configuration>
          </execution>
          <!-- This is for delomboking also your tests sources. <execution> <id>test-delombok</id> <phase>generate-test-sources</phase> <goals> <goal>testDelombok</goal> </goals>
              <configuration> <verbose>false</verbose> </configuration> </execution> -->
        </executions>
      </plugin>

      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${spotbugs.maven-plugin.version}</version>
        <dependencies>
          <!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
          <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs</artifactId>
            <version>${spotbugs.version}</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${maven-surefire-report-plugin.version}</version>
      </plugin>
      <!--<plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${maven-jxr-plugin.version}</version>
      </plugin>-->
    </plugins>
  </reporting>
</project>
